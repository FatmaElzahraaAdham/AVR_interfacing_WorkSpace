
PWM.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000ba2  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          0000000c  00800060  00800060  00000c16  2**0
                  ALLOC
  2 .stab         00000f84  00000000  00000000  00000c18  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000c70  00000000  00000000  00001b9c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 18 04 	jmp	0x830	; 0x830 <__vector_1>
   8:	0c 94 45 04 	jmp	0x88a	; 0x88a <__vector_2>
   c:	0c 94 72 04 	jmp	0x8e4	; 0x8e4 <__vector_3>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 2f 05 	jmp	0xa5e	; 0xa5e <__vector_10>
  2c:	0c 94 e9 04 	jmp	0x9d2	; 0x9d2 <__vector_11>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	ac 36       	cpi	r26, 0x6C	; 108
  6c:	b1 07       	cpc	r27, r17
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 c3 05 	call	0xb86	; 0xb86 <main>
  74:	0c 94 cf 05 	jmp	0xb9e	; 0xb9e <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <DIO_VidSetPinDirection>:
#include"STD_Lib.h"
#include"BIT_Math.h"
#include"avr/io.h"
#include"DIO.h"

void DIO_VidSetPinDirection(u8 Copy_U8Port,u8 Copy_U8Pin,u8 Copy_u8Direction){
  7c:	df 93       	push	r29
  7e:	cf 93       	push	r28
  80:	cd b7       	in	r28, 0x3d	; 61
  82:	de b7       	in	r29, 0x3e	; 62
  84:	27 97       	sbiw	r28, 0x07	; 7
  86:	0f b6       	in	r0, 0x3f	; 63
  88:	f8 94       	cli
  8a:	de bf       	out	0x3e, r29	; 62
  8c:	0f be       	out	0x3f, r0	; 63
  8e:	cd bf       	out	0x3d, r28	; 61
  90:	89 83       	std	Y+1, r24	; 0x01
  92:	6a 83       	std	Y+2, r22	; 0x02
  94:	4b 83       	std	Y+3, r20	; 0x03

	if(Copy_u8Direction== DIO_Output){
  96:	8b 81       	ldd	r24, Y+3	; 0x03
  98:	81 30       	cpi	r24, 0x01	; 1
  9a:	09 f0       	breq	.+2      	; 0x9e <DIO_VidSetPinDirection+0x22>
  9c:	6f c0       	rjmp	.+222    	; 0x17c <DIO_VidSetPinDirection+0x100>
		switch(Copy_U8Port){
  9e:	89 81       	ldd	r24, Y+1	; 0x01
  a0:	28 2f       	mov	r18, r24
  a2:	30 e0       	ldi	r19, 0x00	; 0
  a4:	3f 83       	std	Y+7, r19	; 0x07
  a6:	2e 83       	std	Y+6, r18	; 0x06
  a8:	8e 81       	ldd	r24, Y+6	; 0x06
  aa:	9f 81       	ldd	r25, Y+7	; 0x07
  ac:	81 30       	cpi	r24, 0x01	; 1
  ae:	91 05       	cpc	r25, r1
  b0:	49 f1       	breq	.+82     	; 0x104 <DIO_VidSetPinDirection+0x88>
  b2:	2e 81       	ldd	r18, Y+6	; 0x06
  b4:	3f 81       	ldd	r19, Y+7	; 0x07
  b6:	22 30       	cpi	r18, 0x02	; 2
  b8:	31 05       	cpc	r19, r1
  ba:	2c f4       	brge	.+10     	; 0xc6 <DIO_VidSetPinDirection+0x4a>
  bc:	8e 81       	ldd	r24, Y+6	; 0x06
  be:	9f 81       	ldd	r25, Y+7	; 0x07
  c0:	00 97       	sbiw	r24, 0x00	; 0
  c2:	61 f0       	breq	.+24     	; 0xdc <DIO_VidSetPinDirection+0x60>
  c4:	d2 c0       	rjmp	.+420    	; 0x26a <DIO_VidSetPinDirection+0x1ee>
  c6:	2e 81       	ldd	r18, Y+6	; 0x06
  c8:	3f 81       	ldd	r19, Y+7	; 0x07
  ca:	22 30       	cpi	r18, 0x02	; 2
  cc:	31 05       	cpc	r19, r1
  ce:	71 f1       	breq	.+92     	; 0x12c <DIO_VidSetPinDirection+0xb0>
  d0:	8e 81       	ldd	r24, Y+6	; 0x06
  d2:	9f 81       	ldd	r25, Y+7	; 0x07
  d4:	83 30       	cpi	r24, 0x03	; 3
  d6:	91 05       	cpc	r25, r1
  d8:	e9 f1       	breq	.+122    	; 0x154 <DIO_VidSetPinDirection+0xd8>
  da:	c7 c0       	rjmp	.+398    	; 0x26a <DIO_VidSetPinDirection+0x1ee>

				case DIO_PORTA:
					SET_BIT(DDRA,Copy_U8Pin);
  dc:	aa e3       	ldi	r26, 0x3A	; 58
  de:	b0 e0       	ldi	r27, 0x00	; 0
  e0:	ea e3       	ldi	r30, 0x3A	; 58
  e2:	f0 e0       	ldi	r31, 0x00	; 0
  e4:	80 81       	ld	r24, Z
  e6:	48 2f       	mov	r20, r24
  e8:	8a 81       	ldd	r24, Y+2	; 0x02
  ea:	28 2f       	mov	r18, r24
  ec:	30 e0       	ldi	r19, 0x00	; 0
  ee:	81 e0       	ldi	r24, 0x01	; 1
  f0:	90 e0       	ldi	r25, 0x00	; 0
  f2:	02 2e       	mov	r0, r18
  f4:	02 c0       	rjmp	.+4      	; 0xfa <DIO_VidSetPinDirection+0x7e>
  f6:	88 0f       	add	r24, r24
  f8:	99 1f       	adc	r25, r25
  fa:	0a 94       	dec	r0
  fc:	e2 f7       	brpl	.-8      	; 0xf6 <DIO_VidSetPinDirection+0x7a>
  fe:	84 2b       	or	r24, r20
 100:	8c 93       	st	X, r24
 102:	b3 c0       	rjmp	.+358    	; 0x26a <DIO_VidSetPinDirection+0x1ee>
					break;
				case DIO_PORTB:
					SET_BIT(DDRB,Copy_U8Pin);
 104:	a7 e3       	ldi	r26, 0x37	; 55
 106:	b0 e0       	ldi	r27, 0x00	; 0
 108:	e7 e3       	ldi	r30, 0x37	; 55
 10a:	f0 e0       	ldi	r31, 0x00	; 0
 10c:	80 81       	ld	r24, Z
 10e:	48 2f       	mov	r20, r24
 110:	8a 81       	ldd	r24, Y+2	; 0x02
 112:	28 2f       	mov	r18, r24
 114:	30 e0       	ldi	r19, 0x00	; 0
 116:	81 e0       	ldi	r24, 0x01	; 1
 118:	90 e0       	ldi	r25, 0x00	; 0
 11a:	02 2e       	mov	r0, r18
 11c:	02 c0       	rjmp	.+4      	; 0x122 <DIO_VidSetPinDirection+0xa6>
 11e:	88 0f       	add	r24, r24
 120:	99 1f       	adc	r25, r25
 122:	0a 94       	dec	r0
 124:	e2 f7       	brpl	.-8      	; 0x11e <DIO_VidSetPinDirection+0xa2>
 126:	84 2b       	or	r24, r20
 128:	8c 93       	st	X, r24
 12a:	9f c0       	rjmp	.+318    	; 0x26a <DIO_VidSetPinDirection+0x1ee>
					break;
				case DIO_PORTC:
					SET_BIT(DDRC,Copy_U8Pin);
 12c:	a4 e3       	ldi	r26, 0x34	; 52
 12e:	b0 e0       	ldi	r27, 0x00	; 0
 130:	e4 e3       	ldi	r30, 0x34	; 52
 132:	f0 e0       	ldi	r31, 0x00	; 0
 134:	80 81       	ld	r24, Z
 136:	48 2f       	mov	r20, r24
 138:	8a 81       	ldd	r24, Y+2	; 0x02
 13a:	28 2f       	mov	r18, r24
 13c:	30 e0       	ldi	r19, 0x00	; 0
 13e:	81 e0       	ldi	r24, 0x01	; 1
 140:	90 e0       	ldi	r25, 0x00	; 0
 142:	02 2e       	mov	r0, r18
 144:	02 c0       	rjmp	.+4      	; 0x14a <DIO_VidSetPinDirection+0xce>
 146:	88 0f       	add	r24, r24
 148:	99 1f       	adc	r25, r25
 14a:	0a 94       	dec	r0
 14c:	e2 f7       	brpl	.-8      	; 0x146 <DIO_VidSetPinDirection+0xca>
 14e:	84 2b       	or	r24, r20
 150:	8c 93       	st	X, r24
 152:	8b c0       	rjmp	.+278    	; 0x26a <DIO_VidSetPinDirection+0x1ee>
					break;
				case DIO_PORTD:
					SET_BIT(DDRD,Copy_U8Pin);
 154:	a1 e3       	ldi	r26, 0x31	; 49
 156:	b0 e0       	ldi	r27, 0x00	; 0
 158:	e1 e3       	ldi	r30, 0x31	; 49
 15a:	f0 e0       	ldi	r31, 0x00	; 0
 15c:	80 81       	ld	r24, Z
 15e:	48 2f       	mov	r20, r24
 160:	8a 81       	ldd	r24, Y+2	; 0x02
 162:	28 2f       	mov	r18, r24
 164:	30 e0       	ldi	r19, 0x00	; 0
 166:	81 e0       	ldi	r24, 0x01	; 1
 168:	90 e0       	ldi	r25, 0x00	; 0
 16a:	02 2e       	mov	r0, r18
 16c:	02 c0       	rjmp	.+4      	; 0x172 <DIO_VidSetPinDirection+0xf6>
 16e:	88 0f       	add	r24, r24
 170:	99 1f       	adc	r25, r25
 172:	0a 94       	dec	r0
 174:	e2 f7       	brpl	.-8      	; 0x16e <DIO_VidSetPinDirection+0xf2>
 176:	84 2b       	or	r24, r20
 178:	8c 93       	st	X, r24
 17a:	77 c0       	rjmp	.+238    	; 0x26a <DIO_VidSetPinDirection+0x1ee>
					break;
				}
	}
	else if(Copy_u8Direction==DIO_Intput){
 17c:	8b 81       	ldd	r24, Y+3	; 0x03
 17e:	88 23       	and	r24, r24
 180:	09 f0       	breq	.+2      	; 0x184 <DIO_VidSetPinDirection+0x108>
 182:	73 c0       	rjmp	.+230    	; 0x26a <DIO_VidSetPinDirection+0x1ee>
		switch(Copy_U8Port){
 184:	89 81       	ldd	r24, Y+1	; 0x01
 186:	28 2f       	mov	r18, r24
 188:	30 e0       	ldi	r19, 0x00	; 0
 18a:	3d 83       	std	Y+5, r19	; 0x05
 18c:	2c 83       	std	Y+4, r18	; 0x04
 18e:	8c 81       	ldd	r24, Y+4	; 0x04
 190:	9d 81       	ldd	r25, Y+5	; 0x05
 192:	81 30       	cpi	r24, 0x01	; 1
 194:	91 05       	cpc	r25, r1
 196:	59 f1       	breq	.+86     	; 0x1ee <DIO_VidSetPinDirection+0x172>
 198:	2c 81       	ldd	r18, Y+4	; 0x04
 19a:	3d 81       	ldd	r19, Y+5	; 0x05
 19c:	22 30       	cpi	r18, 0x02	; 2
 19e:	31 05       	cpc	r19, r1
 1a0:	2c f4       	brge	.+10     	; 0x1ac <DIO_VidSetPinDirection+0x130>
 1a2:	8c 81       	ldd	r24, Y+4	; 0x04
 1a4:	9d 81       	ldd	r25, Y+5	; 0x05
 1a6:	00 97       	sbiw	r24, 0x00	; 0
 1a8:	69 f0       	breq	.+26     	; 0x1c4 <DIO_VidSetPinDirection+0x148>
 1aa:	5f c0       	rjmp	.+190    	; 0x26a <DIO_VidSetPinDirection+0x1ee>
 1ac:	2c 81       	ldd	r18, Y+4	; 0x04
 1ae:	3d 81       	ldd	r19, Y+5	; 0x05
 1b0:	22 30       	cpi	r18, 0x02	; 2
 1b2:	31 05       	cpc	r19, r1
 1b4:	89 f1       	breq	.+98     	; 0x218 <DIO_VidSetPinDirection+0x19c>
 1b6:	8c 81       	ldd	r24, Y+4	; 0x04
 1b8:	9d 81       	ldd	r25, Y+5	; 0x05
 1ba:	83 30       	cpi	r24, 0x03	; 3
 1bc:	91 05       	cpc	r25, r1
 1be:	09 f4       	brne	.+2      	; 0x1c2 <DIO_VidSetPinDirection+0x146>
 1c0:	40 c0       	rjmp	.+128    	; 0x242 <DIO_VidSetPinDirection+0x1c6>
 1c2:	53 c0       	rjmp	.+166    	; 0x26a <DIO_VidSetPinDirection+0x1ee>
				case DIO_PORTA:
					CLR_BIT(DDRA,Copy_U8Pin);
 1c4:	aa e3       	ldi	r26, 0x3A	; 58
 1c6:	b0 e0       	ldi	r27, 0x00	; 0
 1c8:	ea e3       	ldi	r30, 0x3A	; 58
 1ca:	f0 e0       	ldi	r31, 0x00	; 0
 1cc:	80 81       	ld	r24, Z
 1ce:	48 2f       	mov	r20, r24
 1d0:	8a 81       	ldd	r24, Y+2	; 0x02
 1d2:	28 2f       	mov	r18, r24
 1d4:	30 e0       	ldi	r19, 0x00	; 0
 1d6:	81 e0       	ldi	r24, 0x01	; 1
 1d8:	90 e0       	ldi	r25, 0x00	; 0
 1da:	02 2e       	mov	r0, r18
 1dc:	02 c0       	rjmp	.+4      	; 0x1e2 <DIO_VidSetPinDirection+0x166>
 1de:	88 0f       	add	r24, r24
 1e0:	99 1f       	adc	r25, r25
 1e2:	0a 94       	dec	r0
 1e4:	e2 f7       	brpl	.-8      	; 0x1de <DIO_VidSetPinDirection+0x162>
 1e6:	80 95       	com	r24
 1e8:	84 23       	and	r24, r20
 1ea:	8c 93       	st	X, r24
 1ec:	3e c0       	rjmp	.+124    	; 0x26a <DIO_VidSetPinDirection+0x1ee>
					break;
				case DIO_PORTB:
					CLR_BIT(DDRB,Copy_U8Pin);
 1ee:	a7 e3       	ldi	r26, 0x37	; 55
 1f0:	b0 e0       	ldi	r27, 0x00	; 0
 1f2:	e7 e3       	ldi	r30, 0x37	; 55
 1f4:	f0 e0       	ldi	r31, 0x00	; 0
 1f6:	80 81       	ld	r24, Z
 1f8:	48 2f       	mov	r20, r24
 1fa:	8a 81       	ldd	r24, Y+2	; 0x02
 1fc:	28 2f       	mov	r18, r24
 1fe:	30 e0       	ldi	r19, 0x00	; 0
 200:	81 e0       	ldi	r24, 0x01	; 1
 202:	90 e0       	ldi	r25, 0x00	; 0
 204:	02 2e       	mov	r0, r18
 206:	02 c0       	rjmp	.+4      	; 0x20c <DIO_VidSetPinDirection+0x190>
 208:	88 0f       	add	r24, r24
 20a:	99 1f       	adc	r25, r25
 20c:	0a 94       	dec	r0
 20e:	e2 f7       	brpl	.-8      	; 0x208 <DIO_VidSetPinDirection+0x18c>
 210:	80 95       	com	r24
 212:	84 23       	and	r24, r20
 214:	8c 93       	st	X, r24
 216:	29 c0       	rjmp	.+82     	; 0x26a <DIO_VidSetPinDirection+0x1ee>
					break;
				case DIO_PORTC:
					CLR_BIT(DDRC,Copy_U8Pin);
 218:	a4 e3       	ldi	r26, 0x34	; 52
 21a:	b0 e0       	ldi	r27, 0x00	; 0
 21c:	e4 e3       	ldi	r30, 0x34	; 52
 21e:	f0 e0       	ldi	r31, 0x00	; 0
 220:	80 81       	ld	r24, Z
 222:	48 2f       	mov	r20, r24
 224:	8a 81       	ldd	r24, Y+2	; 0x02
 226:	28 2f       	mov	r18, r24
 228:	30 e0       	ldi	r19, 0x00	; 0
 22a:	81 e0       	ldi	r24, 0x01	; 1
 22c:	90 e0       	ldi	r25, 0x00	; 0
 22e:	02 2e       	mov	r0, r18
 230:	02 c0       	rjmp	.+4      	; 0x236 <DIO_VidSetPinDirection+0x1ba>
 232:	88 0f       	add	r24, r24
 234:	99 1f       	adc	r25, r25
 236:	0a 94       	dec	r0
 238:	e2 f7       	brpl	.-8      	; 0x232 <DIO_VidSetPinDirection+0x1b6>
 23a:	80 95       	com	r24
 23c:	84 23       	and	r24, r20
 23e:	8c 93       	st	X, r24
 240:	14 c0       	rjmp	.+40     	; 0x26a <DIO_VidSetPinDirection+0x1ee>
					break;
				case DIO_PORTD:
					CLR_BIT(DDRD,Copy_U8Pin);
 242:	a1 e3       	ldi	r26, 0x31	; 49
 244:	b0 e0       	ldi	r27, 0x00	; 0
 246:	e1 e3       	ldi	r30, 0x31	; 49
 248:	f0 e0       	ldi	r31, 0x00	; 0
 24a:	80 81       	ld	r24, Z
 24c:	48 2f       	mov	r20, r24
 24e:	8a 81       	ldd	r24, Y+2	; 0x02
 250:	28 2f       	mov	r18, r24
 252:	30 e0       	ldi	r19, 0x00	; 0
 254:	81 e0       	ldi	r24, 0x01	; 1
 256:	90 e0       	ldi	r25, 0x00	; 0
 258:	02 2e       	mov	r0, r18
 25a:	02 c0       	rjmp	.+4      	; 0x260 <DIO_VidSetPinDirection+0x1e4>
 25c:	88 0f       	add	r24, r24
 25e:	99 1f       	adc	r25, r25
 260:	0a 94       	dec	r0
 262:	e2 f7       	brpl	.-8      	; 0x25c <DIO_VidSetPinDirection+0x1e0>
 264:	80 95       	com	r24
 266:	84 23       	and	r24, r20
 268:	8c 93       	st	X, r24
					break;

				}
	}

}
 26a:	27 96       	adiw	r28, 0x07	; 7
 26c:	0f b6       	in	r0, 0x3f	; 63
 26e:	f8 94       	cli
 270:	de bf       	out	0x3e, r29	; 62
 272:	0f be       	out	0x3f, r0	; 63
 274:	cd bf       	out	0x3d, r28	; 61
 276:	cf 91       	pop	r28
 278:	df 91       	pop	r29
 27a:	08 95       	ret

0000027c <DIO_VidSetPinValue>:
void DIO_VidSetPinValue(u8 Copy_U8Port,u8 Copy_U8Pin,u8 Copy_u8Value){
 27c:	df 93       	push	r29
 27e:	cf 93       	push	r28
 280:	cd b7       	in	r28, 0x3d	; 61
 282:	de b7       	in	r29, 0x3e	; 62
 284:	27 97       	sbiw	r28, 0x07	; 7
 286:	0f b6       	in	r0, 0x3f	; 63
 288:	f8 94       	cli
 28a:	de bf       	out	0x3e, r29	; 62
 28c:	0f be       	out	0x3f, r0	; 63
 28e:	cd bf       	out	0x3d, r28	; 61
 290:	89 83       	std	Y+1, r24	; 0x01
 292:	6a 83       	std	Y+2, r22	; 0x02
 294:	4b 83       	std	Y+3, r20	; 0x03

	if(Copy_u8Value== DIO_High){
 296:	8b 81       	ldd	r24, Y+3	; 0x03
 298:	81 30       	cpi	r24, 0x01	; 1
 29a:	09 f0       	breq	.+2      	; 0x29e <DIO_VidSetPinValue+0x22>
 29c:	6f c0       	rjmp	.+222    	; 0x37c <DIO_VidSetPinValue+0x100>
		switch(Copy_U8Port){
 29e:	89 81       	ldd	r24, Y+1	; 0x01
 2a0:	28 2f       	mov	r18, r24
 2a2:	30 e0       	ldi	r19, 0x00	; 0
 2a4:	3f 83       	std	Y+7, r19	; 0x07
 2a6:	2e 83       	std	Y+6, r18	; 0x06
 2a8:	8e 81       	ldd	r24, Y+6	; 0x06
 2aa:	9f 81       	ldd	r25, Y+7	; 0x07
 2ac:	81 30       	cpi	r24, 0x01	; 1
 2ae:	91 05       	cpc	r25, r1
 2b0:	49 f1       	breq	.+82     	; 0x304 <DIO_VidSetPinValue+0x88>
 2b2:	2e 81       	ldd	r18, Y+6	; 0x06
 2b4:	3f 81       	ldd	r19, Y+7	; 0x07
 2b6:	22 30       	cpi	r18, 0x02	; 2
 2b8:	31 05       	cpc	r19, r1
 2ba:	2c f4       	brge	.+10     	; 0x2c6 <DIO_VidSetPinValue+0x4a>
 2bc:	8e 81       	ldd	r24, Y+6	; 0x06
 2be:	9f 81       	ldd	r25, Y+7	; 0x07
 2c0:	00 97       	sbiw	r24, 0x00	; 0
 2c2:	61 f0       	breq	.+24     	; 0x2dc <DIO_VidSetPinValue+0x60>
 2c4:	d2 c0       	rjmp	.+420    	; 0x46a <DIO_VidSetPinValue+0x1ee>
 2c6:	2e 81       	ldd	r18, Y+6	; 0x06
 2c8:	3f 81       	ldd	r19, Y+7	; 0x07
 2ca:	22 30       	cpi	r18, 0x02	; 2
 2cc:	31 05       	cpc	r19, r1
 2ce:	71 f1       	breq	.+92     	; 0x32c <DIO_VidSetPinValue+0xb0>
 2d0:	8e 81       	ldd	r24, Y+6	; 0x06
 2d2:	9f 81       	ldd	r25, Y+7	; 0x07
 2d4:	83 30       	cpi	r24, 0x03	; 3
 2d6:	91 05       	cpc	r25, r1
 2d8:	e9 f1       	breq	.+122    	; 0x354 <DIO_VidSetPinValue+0xd8>
 2da:	c7 c0       	rjmp	.+398    	; 0x46a <DIO_VidSetPinValue+0x1ee>

		    case DIO_PORTA :
				SET_BIT(PORTA,Copy_U8Pin);
 2dc:	ab e3       	ldi	r26, 0x3B	; 59
 2de:	b0 e0       	ldi	r27, 0x00	; 0
 2e0:	eb e3       	ldi	r30, 0x3B	; 59
 2e2:	f0 e0       	ldi	r31, 0x00	; 0
 2e4:	80 81       	ld	r24, Z
 2e6:	48 2f       	mov	r20, r24
 2e8:	8a 81       	ldd	r24, Y+2	; 0x02
 2ea:	28 2f       	mov	r18, r24
 2ec:	30 e0       	ldi	r19, 0x00	; 0
 2ee:	81 e0       	ldi	r24, 0x01	; 1
 2f0:	90 e0       	ldi	r25, 0x00	; 0
 2f2:	02 2e       	mov	r0, r18
 2f4:	02 c0       	rjmp	.+4      	; 0x2fa <DIO_VidSetPinValue+0x7e>
 2f6:	88 0f       	add	r24, r24
 2f8:	99 1f       	adc	r25, r25
 2fa:	0a 94       	dec	r0
 2fc:	e2 f7       	brpl	.-8      	; 0x2f6 <DIO_VidSetPinValue+0x7a>
 2fe:	84 2b       	or	r24, r20
 300:	8c 93       	st	X, r24
 302:	b3 c0       	rjmp	.+358    	; 0x46a <DIO_VidSetPinValue+0x1ee>
				break;

			case DIO_PORTB :
				SET_BIT(PORTB,Copy_U8Pin);
 304:	a8 e3       	ldi	r26, 0x38	; 56
 306:	b0 e0       	ldi	r27, 0x00	; 0
 308:	e8 e3       	ldi	r30, 0x38	; 56
 30a:	f0 e0       	ldi	r31, 0x00	; 0
 30c:	80 81       	ld	r24, Z
 30e:	48 2f       	mov	r20, r24
 310:	8a 81       	ldd	r24, Y+2	; 0x02
 312:	28 2f       	mov	r18, r24
 314:	30 e0       	ldi	r19, 0x00	; 0
 316:	81 e0       	ldi	r24, 0x01	; 1
 318:	90 e0       	ldi	r25, 0x00	; 0
 31a:	02 2e       	mov	r0, r18
 31c:	02 c0       	rjmp	.+4      	; 0x322 <DIO_VidSetPinValue+0xa6>
 31e:	88 0f       	add	r24, r24
 320:	99 1f       	adc	r25, r25
 322:	0a 94       	dec	r0
 324:	e2 f7       	brpl	.-8      	; 0x31e <DIO_VidSetPinValue+0xa2>
 326:	84 2b       	or	r24, r20
 328:	8c 93       	st	X, r24
 32a:	9f c0       	rjmp	.+318    	; 0x46a <DIO_VidSetPinValue+0x1ee>
				break;

			case DIO_PORTC :
				SET_BIT(PORTC,Copy_U8Pin);
 32c:	a5 e3       	ldi	r26, 0x35	; 53
 32e:	b0 e0       	ldi	r27, 0x00	; 0
 330:	e5 e3       	ldi	r30, 0x35	; 53
 332:	f0 e0       	ldi	r31, 0x00	; 0
 334:	80 81       	ld	r24, Z
 336:	48 2f       	mov	r20, r24
 338:	8a 81       	ldd	r24, Y+2	; 0x02
 33a:	28 2f       	mov	r18, r24
 33c:	30 e0       	ldi	r19, 0x00	; 0
 33e:	81 e0       	ldi	r24, 0x01	; 1
 340:	90 e0       	ldi	r25, 0x00	; 0
 342:	02 2e       	mov	r0, r18
 344:	02 c0       	rjmp	.+4      	; 0x34a <DIO_VidSetPinValue+0xce>
 346:	88 0f       	add	r24, r24
 348:	99 1f       	adc	r25, r25
 34a:	0a 94       	dec	r0
 34c:	e2 f7       	brpl	.-8      	; 0x346 <DIO_VidSetPinValue+0xca>
 34e:	84 2b       	or	r24, r20
 350:	8c 93       	st	X, r24
 352:	8b c0       	rjmp	.+278    	; 0x46a <DIO_VidSetPinValue+0x1ee>
				break;

			case DIO_PORTD :
				SET_BIT(PORTD,Copy_U8Pin);
 354:	a2 e3       	ldi	r26, 0x32	; 50
 356:	b0 e0       	ldi	r27, 0x00	; 0
 358:	e2 e3       	ldi	r30, 0x32	; 50
 35a:	f0 e0       	ldi	r31, 0x00	; 0
 35c:	80 81       	ld	r24, Z
 35e:	48 2f       	mov	r20, r24
 360:	8a 81       	ldd	r24, Y+2	; 0x02
 362:	28 2f       	mov	r18, r24
 364:	30 e0       	ldi	r19, 0x00	; 0
 366:	81 e0       	ldi	r24, 0x01	; 1
 368:	90 e0       	ldi	r25, 0x00	; 0
 36a:	02 2e       	mov	r0, r18
 36c:	02 c0       	rjmp	.+4      	; 0x372 <DIO_VidSetPinValue+0xf6>
 36e:	88 0f       	add	r24, r24
 370:	99 1f       	adc	r25, r25
 372:	0a 94       	dec	r0
 374:	e2 f7       	brpl	.-8      	; 0x36e <DIO_VidSetPinValue+0xf2>
 376:	84 2b       	or	r24, r20
 378:	8c 93       	st	X, r24
 37a:	77 c0       	rjmp	.+238    	; 0x46a <DIO_VidSetPinValue+0x1ee>
				break;

						}
	}
	else if(Copy_u8Value== DIO_Low){
 37c:	8b 81       	ldd	r24, Y+3	; 0x03
 37e:	88 23       	and	r24, r24
 380:	09 f0       	breq	.+2      	; 0x384 <DIO_VidSetPinValue+0x108>
 382:	73 c0       	rjmp	.+230    	; 0x46a <DIO_VidSetPinValue+0x1ee>
		switch(Copy_U8Port)
 384:	89 81       	ldd	r24, Y+1	; 0x01
 386:	28 2f       	mov	r18, r24
 388:	30 e0       	ldi	r19, 0x00	; 0
 38a:	3d 83       	std	Y+5, r19	; 0x05
 38c:	2c 83       	std	Y+4, r18	; 0x04
 38e:	8c 81       	ldd	r24, Y+4	; 0x04
 390:	9d 81       	ldd	r25, Y+5	; 0x05
 392:	81 30       	cpi	r24, 0x01	; 1
 394:	91 05       	cpc	r25, r1
 396:	59 f1       	breq	.+86     	; 0x3ee <DIO_VidSetPinValue+0x172>
 398:	2c 81       	ldd	r18, Y+4	; 0x04
 39a:	3d 81       	ldd	r19, Y+5	; 0x05
 39c:	22 30       	cpi	r18, 0x02	; 2
 39e:	31 05       	cpc	r19, r1
 3a0:	2c f4       	brge	.+10     	; 0x3ac <DIO_VidSetPinValue+0x130>
 3a2:	8c 81       	ldd	r24, Y+4	; 0x04
 3a4:	9d 81       	ldd	r25, Y+5	; 0x05
 3a6:	00 97       	sbiw	r24, 0x00	; 0
 3a8:	69 f0       	breq	.+26     	; 0x3c4 <DIO_VidSetPinValue+0x148>
 3aa:	5f c0       	rjmp	.+190    	; 0x46a <DIO_VidSetPinValue+0x1ee>
 3ac:	2c 81       	ldd	r18, Y+4	; 0x04
 3ae:	3d 81       	ldd	r19, Y+5	; 0x05
 3b0:	22 30       	cpi	r18, 0x02	; 2
 3b2:	31 05       	cpc	r19, r1
 3b4:	89 f1       	breq	.+98     	; 0x418 <DIO_VidSetPinValue+0x19c>
 3b6:	8c 81       	ldd	r24, Y+4	; 0x04
 3b8:	9d 81       	ldd	r25, Y+5	; 0x05
 3ba:	83 30       	cpi	r24, 0x03	; 3
 3bc:	91 05       	cpc	r25, r1
 3be:	09 f4       	brne	.+2      	; 0x3c2 <DIO_VidSetPinValue+0x146>
 3c0:	40 c0       	rjmp	.+128    	; 0x442 <DIO_VidSetPinValue+0x1c6>
 3c2:	53 c0       	rjmp	.+166    	; 0x46a <DIO_VidSetPinValue+0x1ee>
				{
					case DIO_PORTA :
						CLR_BIT(PORTA,Copy_U8Pin);
 3c4:	ab e3       	ldi	r26, 0x3B	; 59
 3c6:	b0 e0       	ldi	r27, 0x00	; 0
 3c8:	eb e3       	ldi	r30, 0x3B	; 59
 3ca:	f0 e0       	ldi	r31, 0x00	; 0
 3cc:	80 81       	ld	r24, Z
 3ce:	48 2f       	mov	r20, r24
 3d0:	8a 81       	ldd	r24, Y+2	; 0x02
 3d2:	28 2f       	mov	r18, r24
 3d4:	30 e0       	ldi	r19, 0x00	; 0
 3d6:	81 e0       	ldi	r24, 0x01	; 1
 3d8:	90 e0       	ldi	r25, 0x00	; 0
 3da:	02 2e       	mov	r0, r18
 3dc:	02 c0       	rjmp	.+4      	; 0x3e2 <DIO_VidSetPinValue+0x166>
 3de:	88 0f       	add	r24, r24
 3e0:	99 1f       	adc	r25, r25
 3e2:	0a 94       	dec	r0
 3e4:	e2 f7       	brpl	.-8      	; 0x3de <DIO_VidSetPinValue+0x162>
 3e6:	80 95       	com	r24
 3e8:	84 23       	and	r24, r20
 3ea:	8c 93       	st	X, r24
 3ec:	3e c0       	rjmp	.+124    	; 0x46a <DIO_VidSetPinValue+0x1ee>
						break;

					case DIO_PORTB :
						CLR_BIT(PORTB,Copy_U8Pin);
 3ee:	a8 e3       	ldi	r26, 0x38	; 56
 3f0:	b0 e0       	ldi	r27, 0x00	; 0
 3f2:	e8 e3       	ldi	r30, 0x38	; 56
 3f4:	f0 e0       	ldi	r31, 0x00	; 0
 3f6:	80 81       	ld	r24, Z
 3f8:	48 2f       	mov	r20, r24
 3fa:	8a 81       	ldd	r24, Y+2	; 0x02
 3fc:	28 2f       	mov	r18, r24
 3fe:	30 e0       	ldi	r19, 0x00	; 0
 400:	81 e0       	ldi	r24, 0x01	; 1
 402:	90 e0       	ldi	r25, 0x00	; 0
 404:	02 2e       	mov	r0, r18
 406:	02 c0       	rjmp	.+4      	; 0x40c <DIO_VidSetPinValue+0x190>
 408:	88 0f       	add	r24, r24
 40a:	99 1f       	adc	r25, r25
 40c:	0a 94       	dec	r0
 40e:	e2 f7       	brpl	.-8      	; 0x408 <DIO_VidSetPinValue+0x18c>
 410:	80 95       	com	r24
 412:	84 23       	and	r24, r20
 414:	8c 93       	st	X, r24
 416:	29 c0       	rjmp	.+82     	; 0x46a <DIO_VidSetPinValue+0x1ee>
						break;

					case DIO_PORTC :
						CLR_BIT(PORTC,Copy_U8Pin);
 418:	a5 e3       	ldi	r26, 0x35	; 53
 41a:	b0 e0       	ldi	r27, 0x00	; 0
 41c:	e5 e3       	ldi	r30, 0x35	; 53
 41e:	f0 e0       	ldi	r31, 0x00	; 0
 420:	80 81       	ld	r24, Z
 422:	48 2f       	mov	r20, r24
 424:	8a 81       	ldd	r24, Y+2	; 0x02
 426:	28 2f       	mov	r18, r24
 428:	30 e0       	ldi	r19, 0x00	; 0
 42a:	81 e0       	ldi	r24, 0x01	; 1
 42c:	90 e0       	ldi	r25, 0x00	; 0
 42e:	02 2e       	mov	r0, r18
 430:	02 c0       	rjmp	.+4      	; 0x436 <DIO_VidSetPinValue+0x1ba>
 432:	88 0f       	add	r24, r24
 434:	99 1f       	adc	r25, r25
 436:	0a 94       	dec	r0
 438:	e2 f7       	brpl	.-8      	; 0x432 <DIO_VidSetPinValue+0x1b6>
 43a:	80 95       	com	r24
 43c:	84 23       	and	r24, r20
 43e:	8c 93       	st	X, r24
 440:	14 c0       	rjmp	.+40     	; 0x46a <DIO_VidSetPinValue+0x1ee>
						break;

					case DIO_PORTD :
						CLR_BIT(PORTD,Copy_U8Pin);
 442:	a2 e3       	ldi	r26, 0x32	; 50
 444:	b0 e0       	ldi	r27, 0x00	; 0
 446:	e2 e3       	ldi	r30, 0x32	; 50
 448:	f0 e0       	ldi	r31, 0x00	; 0
 44a:	80 81       	ld	r24, Z
 44c:	48 2f       	mov	r20, r24
 44e:	8a 81       	ldd	r24, Y+2	; 0x02
 450:	28 2f       	mov	r18, r24
 452:	30 e0       	ldi	r19, 0x00	; 0
 454:	81 e0       	ldi	r24, 0x01	; 1
 456:	90 e0       	ldi	r25, 0x00	; 0
 458:	02 2e       	mov	r0, r18
 45a:	02 c0       	rjmp	.+4      	; 0x460 <DIO_VidSetPinValue+0x1e4>
 45c:	88 0f       	add	r24, r24
 45e:	99 1f       	adc	r25, r25
 460:	0a 94       	dec	r0
 462:	e2 f7       	brpl	.-8      	; 0x45c <DIO_VidSetPinValue+0x1e0>
 464:	80 95       	com	r24
 466:	84 23       	and	r24, r20
 468:	8c 93       	st	X, r24
						break;
				}

	}
}
 46a:	27 96       	adiw	r28, 0x07	; 7
 46c:	0f b6       	in	r0, 0x3f	; 63
 46e:	f8 94       	cli
 470:	de bf       	out	0x3e, r29	; 62
 472:	0f be       	out	0x3f, r0	; 63
 474:	cd bf       	out	0x3d, r28	; 61
 476:	cf 91       	pop	r28
 478:	df 91       	pop	r29
 47a:	08 95       	ret

0000047c <DIO_VidSetPortDirection>:
void DIO_VidSetPortDirection( u8 Copy_U8Port , u8 Copy_U8Direction ){
 47c:	df 93       	push	r29
 47e:	cf 93       	push	r28
 480:	00 d0       	rcall	.+0      	; 0x482 <DIO_VidSetPortDirection+0x6>
 482:	00 d0       	rcall	.+0      	; 0x484 <DIO_VidSetPortDirection+0x8>
 484:	cd b7       	in	r28, 0x3d	; 61
 486:	de b7       	in	r29, 0x3e	; 62
 488:	89 83       	std	Y+1, r24	; 0x01
 48a:	6a 83       	std	Y+2, r22	; 0x02
	switch(Copy_U8Port)
 48c:	89 81       	ldd	r24, Y+1	; 0x01
 48e:	28 2f       	mov	r18, r24
 490:	30 e0       	ldi	r19, 0x00	; 0
 492:	3c 83       	std	Y+4, r19	; 0x04
 494:	2b 83       	std	Y+3, r18	; 0x03
 496:	8b 81       	ldd	r24, Y+3	; 0x03
 498:	9c 81       	ldd	r25, Y+4	; 0x04
 49a:	81 30       	cpi	r24, 0x01	; 1
 49c:	91 05       	cpc	r25, r1
 49e:	d1 f0       	breq	.+52     	; 0x4d4 <DIO_VidSetPortDirection+0x58>
 4a0:	2b 81       	ldd	r18, Y+3	; 0x03
 4a2:	3c 81       	ldd	r19, Y+4	; 0x04
 4a4:	22 30       	cpi	r18, 0x02	; 2
 4a6:	31 05       	cpc	r19, r1
 4a8:	2c f4       	brge	.+10     	; 0x4b4 <DIO_VidSetPortDirection+0x38>
 4aa:	8b 81       	ldd	r24, Y+3	; 0x03
 4ac:	9c 81       	ldd	r25, Y+4	; 0x04
 4ae:	00 97       	sbiw	r24, 0x00	; 0
 4b0:	61 f0       	breq	.+24     	; 0x4ca <DIO_VidSetPortDirection+0x4e>
 4b2:	1e c0       	rjmp	.+60     	; 0x4f0 <DIO_VidSetPortDirection+0x74>
 4b4:	2b 81       	ldd	r18, Y+3	; 0x03
 4b6:	3c 81       	ldd	r19, Y+4	; 0x04
 4b8:	22 30       	cpi	r18, 0x02	; 2
 4ba:	31 05       	cpc	r19, r1
 4bc:	81 f0       	breq	.+32     	; 0x4de <DIO_VidSetPortDirection+0x62>
 4be:	8b 81       	ldd	r24, Y+3	; 0x03
 4c0:	9c 81       	ldd	r25, Y+4	; 0x04
 4c2:	83 30       	cpi	r24, 0x03	; 3
 4c4:	91 05       	cpc	r25, r1
 4c6:	81 f0       	breq	.+32     	; 0x4e8 <DIO_VidSetPortDirection+0x6c>
 4c8:	13 c0       	rjmp	.+38     	; 0x4f0 <DIO_VidSetPortDirection+0x74>
			{
				case DIO_PORTA :
					DDRA = Copy_U8Direction ;
 4ca:	ea e3       	ldi	r30, 0x3A	; 58
 4cc:	f0 e0       	ldi	r31, 0x00	; 0
 4ce:	8a 81       	ldd	r24, Y+2	; 0x02
 4d0:	80 83       	st	Z, r24
 4d2:	0e c0       	rjmp	.+28     	; 0x4f0 <DIO_VidSetPortDirection+0x74>
					break;

				case DIO_PORTB :
					DDRB = Copy_U8Direction ;
 4d4:	e7 e3       	ldi	r30, 0x37	; 55
 4d6:	f0 e0       	ldi	r31, 0x00	; 0
 4d8:	8a 81       	ldd	r24, Y+2	; 0x02
 4da:	80 83       	st	Z, r24
 4dc:	09 c0       	rjmp	.+18     	; 0x4f0 <DIO_VidSetPortDirection+0x74>
					break;

				case DIO_PORTC :
					DDRC = Copy_U8Direction ;
 4de:	e4 e3       	ldi	r30, 0x34	; 52
 4e0:	f0 e0       	ldi	r31, 0x00	; 0
 4e2:	8a 81       	ldd	r24, Y+2	; 0x02
 4e4:	80 83       	st	Z, r24
 4e6:	04 c0       	rjmp	.+8      	; 0x4f0 <DIO_VidSetPortDirection+0x74>
					break;

				case DIO_PORTD :
					DDRD = Copy_U8Direction ;
 4e8:	e1 e3       	ldi	r30, 0x31	; 49
 4ea:	f0 e0       	ldi	r31, 0x00	; 0
 4ec:	8a 81       	ldd	r24, Y+2	; 0x02
 4ee:	80 83       	st	Z, r24
					break;
			}

}
 4f0:	0f 90       	pop	r0
 4f2:	0f 90       	pop	r0
 4f4:	0f 90       	pop	r0
 4f6:	0f 90       	pop	r0
 4f8:	cf 91       	pop	r28
 4fa:	df 91       	pop	r29
 4fc:	08 95       	ret

000004fe <DIO_VidSetPortValue>:
void DIO_VidSetPortValue ( u8 Copy_U8Port , u8 Copy_U8Value ){
 4fe:	df 93       	push	r29
 500:	cf 93       	push	r28
 502:	00 d0       	rcall	.+0      	; 0x504 <DIO_VidSetPortValue+0x6>
 504:	00 d0       	rcall	.+0      	; 0x506 <DIO_VidSetPortValue+0x8>
 506:	cd b7       	in	r28, 0x3d	; 61
 508:	de b7       	in	r29, 0x3e	; 62
 50a:	89 83       	std	Y+1, r24	; 0x01
 50c:	6a 83       	std	Y+2, r22	; 0x02
	switch(Copy_U8Port)
 50e:	89 81       	ldd	r24, Y+1	; 0x01
 510:	28 2f       	mov	r18, r24
 512:	30 e0       	ldi	r19, 0x00	; 0
 514:	3c 83       	std	Y+4, r19	; 0x04
 516:	2b 83       	std	Y+3, r18	; 0x03
 518:	8b 81       	ldd	r24, Y+3	; 0x03
 51a:	9c 81       	ldd	r25, Y+4	; 0x04
 51c:	81 30       	cpi	r24, 0x01	; 1
 51e:	91 05       	cpc	r25, r1
 520:	d1 f0       	breq	.+52     	; 0x556 <DIO_VidSetPortValue+0x58>
 522:	2b 81       	ldd	r18, Y+3	; 0x03
 524:	3c 81       	ldd	r19, Y+4	; 0x04
 526:	22 30       	cpi	r18, 0x02	; 2
 528:	31 05       	cpc	r19, r1
 52a:	2c f4       	brge	.+10     	; 0x536 <DIO_VidSetPortValue+0x38>
 52c:	8b 81       	ldd	r24, Y+3	; 0x03
 52e:	9c 81       	ldd	r25, Y+4	; 0x04
 530:	00 97       	sbiw	r24, 0x00	; 0
 532:	61 f0       	breq	.+24     	; 0x54c <DIO_VidSetPortValue+0x4e>
 534:	1e c0       	rjmp	.+60     	; 0x572 <DIO_VidSetPortValue+0x74>
 536:	2b 81       	ldd	r18, Y+3	; 0x03
 538:	3c 81       	ldd	r19, Y+4	; 0x04
 53a:	22 30       	cpi	r18, 0x02	; 2
 53c:	31 05       	cpc	r19, r1
 53e:	81 f0       	breq	.+32     	; 0x560 <DIO_VidSetPortValue+0x62>
 540:	8b 81       	ldd	r24, Y+3	; 0x03
 542:	9c 81       	ldd	r25, Y+4	; 0x04
 544:	83 30       	cpi	r24, 0x03	; 3
 546:	91 05       	cpc	r25, r1
 548:	81 f0       	breq	.+32     	; 0x56a <DIO_VidSetPortValue+0x6c>
 54a:	13 c0       	rjmp	.+38     	; 0x572 <DIO_VidSetPortValue+0x74>
			{
				case DIO_PORTA :
					PORTA = Copy_U8Value ;
 54c:	eb e3       	ldi	r30, 0x3B	; 59
 54e:	f0 e0       	ldi	r31, 0x00	; 0
 550:	8a 81       	ldd	r24, Y+2	; 0x02
 552:	80 83       	st	Z, r24
 554:	0e c0       	rjmp	.+28     	; 0x572 <DIO_VidSetPortValue+0x74>
					break;

				case DIO_PORTB :
					PORTB = Copy_U8Value ;
 556:	e8 e3       	ldi	r30, 0x38	; 56
 558:	f0 e0       	ldi	r31, 0x00	; 0
 55a:	8a 81       	ldd	r24, Y+2	; 0x02
 55c:	80 83       	st	Z, r24
 55e:	09 c0       	rjmp	.+18     	; 0x572 <DIO_VidSetPortValue+0x74>
					break;

				case DIO_PORTC :
					PORTC = Copy_U8Value ;
 560:	e5 e3       	ldi	r30, 0x35	; 53
 562:	f0 e0       	ldi	r31, 0x00	; 0
 564:	8a 81       	ldd	r24, Y+2	; 0x02
 566:	80 83       	st	Z, r24
 568:	04 c0       	rjmp	.+8      	; 0x572 <DIO_VidSetPortValue+0x74>
					break;

				case DIO_PORTD :
					PORTD = Copy_U8Value ;
 56a:	e2 e3       	ldi	r30, 0x32	; 50
 56c:	f0 e0       	ldi	r31, 0x00	; 0
 56e:	8a 81       	ldd	r24, Y+2	; 0x02
 570:	80 83       	st	Z, r24
					break;
			}

}
 572:	0f 90       	pop	r0
 574:	0f 90       	pop	r0
 576:	0f 90       	pop	r0
 578:	0f 90       	pop	r0
 57a:	cf 91       	pop	r28
 57c:	df 91       	pop	r29
 57e:	08 95       	ret

00000580 <DIO_VidTogglePinValue>:
void DIO_VidTogglePinValue(u8 Copy_U8Port,u8 Copy_U8Pin){
 580:	df 93       	push	r29
 582:	cf 93       	push	r28
 584:	00 d0       	rcall	.+0      	; 0x586 <DIO_VidTogglePinValue+0x6>
 586:	00 d0       	rcall	.+0      	; 0x588 <DIO_VidTogglePinValue+0x8>
 588:	cd b7       	in	r28, 0x3d	; 61
 58a:	de b7       	in	r29, 0x3e	; 62
 58c:	89 83       	std	Y+1, r24	; 0x01
 58e:	6a 83       	std	Y+2, r22	; 0x02
	switch(Copy_U8Port)
 590:	89 81       	ldd	r24, Y+1	; 0x01
 592:	28 2f       	mov	r18, r24
 594:	30 e0       	ldi	r19, 0x00	; 0
 596:	3c 83       	std	Y+4, r19	; 0x04
 598:	2b 83       	std	Y+3, r18	; 0x03
 59a:	8b 81       	ldd	r24, Y+3	; 0x03
 59c:	9c 81       	ldd	r25, Y+4	; 0x04
 59e:	81 30       	cpi	r24, 0x01	; 1
 5a0:	91 05       	cpc	r25, r1
 5a2:	49 f1       	breq	.+82     	; 0x5f6 <DIO_VidTogglePinValue+0x76>
 5a4:	2b 81       	ldd	r18, Y+3	; 0x03
 5a6:	3c 81       	ldd	r19, Y+4	; 0x04
 5a8:	22 30       	cpi	r18, 0x02	; 2
 5aa:	31 05       	cpc	r19, r1
 5ac:	2c f4       	brge	.+10     	; 0x5b8 <DIO_VidTogglePinValue+0x38>
 5ae:	8b 81       	ldd	r24, Y+3	; 0x03
 5b0:	9c 81       	ldd	r25, Y+4	; 0x04
 5b2:	00 97       	sbiw	r24, 0x00	; 0
 5b4:	61 f0       	breq	.+24     	; 0x5ce <DIO_VidTogglePinValue+0x4e>
 5b6:	5a c0       	rjmp	.+180    	; 0x66c <DIO_VidTogglePinValue+0xec>
 5b8:	2b 81       	ldd	r18, Y+3	; 0x03
 5ba:	3c 81       	ldd	r19, Y+4	; 0x04
 5bc:	22 30       	cpi	r18, 0x02	; 2
 5be:	31 05       	cpc	r19, r1
 5c0:	71 f1       	breq	.+92     	; 0x61e <DIO_VidTogglePinValue+0x9e>
 5c2:	8b 81       	ldd	r24, Y+3	; 0x03
 5c4:	9c 81       	ldd	r25, Y+4	; 0x04
 5c6:	83 30       	cpi	r24, 0x03	; 3
 5c8:	91 05       	cpc	r25, r1
 5ca:	e9 f1       	breq	.+122    	; 0x646 <DIO_VidTogglePinValue+0xc6>
 5cc:	4f c0       	rjmp	.+158    	; 0x66c <DIO_VidTogglePinValue+0xec>
			{
				case DIO_PORTA :
					TOGGLE_BIT(PORTA,Copy_U8Pin);
 5ce:	ab e3       	ldi	r26, 0x3B	; 59
 5d0:	b0 e0       	ldi	r27, 0x00	; 0
 5d2:	eb e3       	ldi	r30, 0x3B	; 59
 5d4:	f0 e0       	ldi	r31, 0x00	; 0
 5d6:	80 81       	ld	r24, Z
 5d8:	48 2f       	mov	r20, r24
 5da:	8a 81       	ldd	r24, Y+2	; 0x02
 5dc:	28 2f       	mov	r18, r24
 5de:	30 e0       	ldi	r19, 0x00	; 0
 5e0:	81 e0       	ldi	r24, 0x01	; 1
 5e2:	90 e0       	ldi	r25, 0x00	; 0
 5e4:	02 2e       	mov	r0, r18
 5e6:	02 c0       	rjmp	.+4      	; 0x5ec <DIO_VidTogglePinValue+0x6c>
 5e8:	88 0f       	add	r24, r24
 5ea:	99 1f       	adc	r25, r25
 5ec:	0a 94       	dec	r0
 5ee:	e2 f7       	brpl	.-8      	; 0x5e8 <DIO_VidTogglePinValue+0x68>
 5f0:	84 27       	eor	r24, r20
 5f2:	8c 93       	st	X, r24
 5f4:	3b c0       	rjmp	.+118    	; 0x66c <DIO_VidTogglePinValue+0xec>
					break;

				case DIO_PORTB :
					TOGGLE_BIT(PORTB,Copy_U8Pin);
 5f6:	a8 e3       	ldi	r26, 0x38	; 56
 5f8:	b0 e0       	ldi	r27, 0x00	; 0
 5fa:	e8 e3       	ldi	r30, 0x38	; 56
 5fc:	f0 e0       	ldi	r31, 0x00	; 0
 5fe:	80 81       	ld	r24, Z
 600:	48 2f       	mov	r20, r24
 602:	8a 81       	ldd	r24, Y+2	; 0x02
 604:	28 2f       	mov	r18, r24
 606:	30 e0       	ldi	r19, 0x00	; 0
 608:	81 e0       	ldi	r24, 0x01	; 1
 60a:	90 e0       	ldi	r25, 0x00	; 0
 60c:	02 2e       	mov	r0, r18
 60e:	02 c0       	rjmp	.+4      	; 0x614 <DIO_VidTogglePinValue+0x94>
 610:	88 0f       	add	r24, r24
 612:	99 1f       	adc	r25, r25
 614:	0a 94       	dec	r0
 616:	e2 f7       	brpl	.-8      	; 0x610 <DIO_VidTogglePinValue+0x90>
 618:	84 27       	eor	r24, r20
 61a:	8c 93       	st	X, r24
 61c:	27 c0       	rjmp	.+78     	; 0x66c <DIO_VidTogglePinValue+0xec>
					break;

				case DIO_PORTC :
					TOGGLE_BIT(PORTC,Copy_U8Pin);
 61e:	a5 e3       	ldi	r26, 0x35	; 53
 620:	b0 e0       	ldi	r27, 0x00	; 0
 622:	e5 e3       	ldi	r30, 0x35	; 53
 624:	f0 e0       	ldi	r31, 0x00	; 0
 626:	80 81       	ld	r24, Z
 628:	48 2f       	mov	r20, r24
 62a:	8a 81       	ldd	r24, Y+2	; 0x02
 62c:	28 2f       	mov	r18, r24
 62e:	30 e0       	ldi	r19, 0x00	; 0
 630:	81 e0       	ldi	r24, 0x01	; 1
 632:	90 e0       	ldi	r25, 0x00	; 0
 634:	02 2e       	mov	r0, r18
 636:	02 c0       	rjmp	.+4      	; 0x63c <DIO_VidTogglePinValue+0xbc>
 638:	88 0f       	add	r24, r24
 63a:	99 1f       	adc	r25, r25
 63c:	0a 94       	dec	r0
 63e:	e2 f7       	brpl	.-8      	; 0x638 <DIO_VidTogglePinValue+0xb8>
 640:	84 27       	eor	r24, r20
 642:	8c 93       	st	X, r24
 644:	13 c0       	rjmp	.+38     	; 0x66c <DIO_VidTogglePinValue+0xec>
					break;

				case DIO_PORTD :
					TOGGLE_BIT(PORTD,Copy_U8Pin);
 646:	a2 e3       	ldi	r26, 0x32	; 50
 648:	b0 e0       	ldi	r27, 0x00	; 0
 64a:	e2 e3       	ldi	r30, 0x32	; 50
 64c:	f0 e0       	ldi	r31, 0x00	; 0
 64e:	80 81       	ld	r24, Z
 650:	48 2f       	mov	r20, r24
 652:	8a 81       	ldd	r24, Y+2	; 0x02
 654:	28 2f       	mov	r18, r24
 656:	30 e0       	ldi	r19, 0x00	; 0
 658:	81 e0       	ldi	r24, 0x01	; 1
 65a:	90 e0       	ldi	r25, 0x00	; 0
 65c:	02 2e       	mov	r0, r18
 65e:	02 c0       	rjmp	.+4      	; 0x664 <DIO_VidTogglePinValue+0xe4>
 660:	88 0f       	add	r24, r24
 662:	99 1f       	adc	r25, r25
 664:	0a 94       	dec	r0
 666:	e2 f7       	brpl	.-8      	; 0x660 <DIO_VidTogglePinValue+0xe0>
 668:	84 27       	eor	r24, r20
 66a:	8c 93       	st	X, r24
					break;
			}
}
 66c:	0f 90       	pop	r0
 66e:	0f 90       	pop	r0
 670:	0f 90       	pop	r0
 672:	0f 90       	pop	r0
 674:	cf 91       	pop	r28
 676:	df 91       	pop	r29
 678:	08 95       	ret

0000067a <DIO_GetPinValue>:
u8 DIO_GetPinValue(u8 Copy_U8Port,u8 Copy_U8Pin){
 67a:	df 93       	push	r29
 67c:	cf 93       	push	r28
 67e:	cd b7       	in	r28, 0x3d	; 61
 680:	de b7       	in	r29, 0x3e	; 62
 682:	29 97       	sbiw	r28, 0x09	; 9
 684:	0f b6       	in	r0, 0x3f	; 63
 686:	f8 94       	cli
 688:	de bf       	out	0x3e, r29	; 62
 68a:	0f be       	out	0x3f, r0	; 63
 68c:	cd bf       	out	0x3d, r28	; 61
 68e:	89 83       	std	Y+1, r24	; 0x01
 690:	6a 83       	std	Y+2, r22	; 0x02
	switch(Copy_U8Port)
 692:	89 81       	ldd	r24, Y+1	; 0x01
 694:	28 2f       	mov	r18, r24
 696:	30 e0       	ldi	r19, 0x00	; 0
 698:	38 87       	std	Y+8, r19	; 0x08
 69a:	2f 83       	std	Y+7, r18	; 0x07
 69c:	8f 81       	ldd	r24, Y+7	; 0x07
 69e:	98 85       	ldd	r25, Y+8	; 0x08
 6a0:	81 30       	cpi	r24, 0x01	; 1
 6a2:	91 05       	cpc	r25, r1
 6a4:	c9 f0       	breq	.+50     	; 0x6d8 <DIO_GetPinValue+0x5e>
 6a6:	2f 81       	ldd	r18, Y+7	; 0x07
 6a8:	38 85       	ldd	r19, Y+8	; 0x08
 6aa:	22 30       	cpi	r18, 0x02	; 2
 6ac:	31 05       	cpc	r19, r1
 6ae:	2c f4       	brge	.+10     	; 0x6ba <DIO_GetPinValue+0x40>
 6b0:	8f 81       	ldd	r24, Y+7	; 0x07
 6b2:	98 85       	ldd	r25, Y+8	; 0x08
 6b4:	00 97       	sbiw	r24, 0x00	; 0
 6b6:	61 f0       	breq	.+24     	; 0x6d0 <DIO_GetPinValue+0x56>
 6b8:	1a c0       	rjmp	.+52     	; 0x6ee <DIO_GetPinValue+0x74>
 6ba:	2f 81       	ldd	r18, Y+7	; 0x07
 6bc:	38 85       	ldd	r19, Y+8	; 0x08
 6be:	22 30       	cpi	r18, 0x02	; 2
 6c0:	31 05       	cpc	r19, r1
 6c2:	71 f0       	breq	.+28     	; 0x6e0 <DIO_GetPinValue+0x66>
 6c4:	8f 81       	ldd	r24, Y+7	; 0x07
 6c6:	98 85       	ldd	r25, Y+8	; 0x08
 6c8:	83 30       	cpi	r24, 0x03	; 3
 6ca:	91 05       	cpc	r25, r1
 6cc:	69 f0       	breq	.+26     	; 0x6e8 <DIO_GetPinValue+0x6e>
 6ce:	0f c0       	rjmp	.+30     	; 0x6ee <DIO_GetPinValue+0x74>
			{
				case DIO_PORTA :
					GET_BIT(PINA,Copy_U8Pin);
 6d0:	e9 e3       	ldi	r30, 0x39	; 57
 6d2:	f0 e0       	ldi	r31, 0x00	; 0
 6d4:	90 81       	ld	r25, Z
 6d6:	0b c0       	rjmp	.+22     	; 0x6ee <DIO_GetPinValue+0x74>
					break;

				case DIO_PORTB :
					GET_BIT(PINB,Copy_U8Pin);
 6d8:	e6 e3       	ldi	r30, 0x36	; 54
 6da:	f0 e0       	ldi	r31, 0x00	; 0
 6dc:	20 81       	ld	r18, Z
 6de:	07 c0       	rjmp	.+14     	; 0x6ee <DIO_GetPinValue+0x74>
					break;

				case DIO_PORTC :
					GET_BIT(PINC,Copy_U8Pin);
 6e0:	e3 e3       	ldi	r30, 0x33	; 51
 6e2:	f0 e0       	ldi	r31, 0x00	; 0
 6e4:	30 81       	ld	r19, Z
 6e6:	03 c0       	rjmp	.+6      	; 0x6ee <DIO_GetPinValue+0x74>
					break;

				case DIO_PORTD :
					GET_BIT(PIND,Copy_U8Pin);
 6e8:	e0 e3       	ldi	r30, 0x30	; 48
 6ea:	f0 e0       	ldi	r31, 0x00	; 0
 6ec:	80 81       	ld	r24, Z
					break;
			}
}
 6ee:	29 96       	adiw	r28, 0x09	; 9
 6f0:	0f b6       	in	r0, 0x3f	; 63
 6f2:	f8 94       	cli
 6f4:	de bf       	out	0x3e, r29	; 62
 6f6:	0f be       	out	0x3f, r0	; 63
 6f8:	cd bf       	out	0x3d, r28	; 61
 6fa:	cf 91       	pop	r28
 6fc:	df 91       	pop	r29
 6fe:	08 95       	ret

00000700 <EX_INT0VidInit>:

void (*Int0_PFUN)(void);
void (*Int1_PFUN)(void);
void (*Int2_PFUN)(void);

void EX_INT0VidInit(void){
 700:	df 93       	push	r29
 702:	cf 93       	push	r28
 704:	cd b7       	in	r28, 0x3d	; 61
 706:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(SREG ,7);
 708:	af e5       	ldi	r26, 0x5F	; 95
 70a:	b0 e0       	ldi	r27, 0x00	; 0
 70c:	ef e5       	ldi	r30, 0x5F	; 95
 70e:	f0 e0       	ldi	r31, 0x00	; 0
 710:	80 81       	ld	r24, Z
 712:	80 68       	ori	r24, 0x80	; 128
 714:	8c 93       	st	X, r24
	SET_BIT(GICR ,6);
 716:	ab e5       	ldi	r26, 0x5B	; 91
 718:	b0 e0       	ldi	r27, 0x00	; 0
 71a:	eb e5       	ldi	r30, 0x5B	; 91
 71c:	f0 e0       	ldi	r31, 0x00	; 0
 71e:	80 81       	ld	r24, Z
 720:	80 64       	ori	r24, 0x40	; 64
 722:	8c 93       	st	X, r24
//	falling
	CLR_BIT(MCUCR ,0);
 724:	a5 e5       	ldi	r26, 0x55	; 85
 726:	b0 e0       	ldi	r27, 0x00	; 0
 728:	e5 e5       	ldi	r30, 0x55	; 85
 72a:	f0 e0       	ldi	r31, 0x00	; 0
 72c:	80 81       	ld	r24, Z
 72e:	8e 7f       	andi	r24, 0xFE	; 254
 730:	8c 93       	st	X, r24
	SET_BIT(MCUCR ,1);
 732:	a5 e5       	ldi	r26, 0x55	; 85
 734:	b0 e0       	ldi	r27, 0x00	; 0
 736:	e5 e5       	ldi	r30, 0x55	; 85
 738:	f0 e0       	ldi	r31, 0x00	; 0
 73a:	80 81       	ld	r24, Z
 73c:	82 60       	ori	r24, 0x02	; 2
 73e:	8c 93       	st	X, r24
}
 740:	cf 91       	pop	r28
 742:	df 91       	pop	r29
 744:	08 95       	ret

00000746 <EX_INT0VidSetCallBack>:

void EX_INT0VidSetCallBack(void (*ptr)(void)){
 746:	df 93       	push	r29
 748:	cf 93       	push	r28
 74a:	00 d0       	rcall	.+0      	; 0x74c <EX_INT0VidSetCallBack+0x6>
 74c:	cd b7       	in	r28, 0x3d	; 61
 74e:	de b7       	in	r29, 0x3e	; 62
 750:	9a 83       	std	Y+2, r25	; 0x02
 752:	89 83       	std	Y+1, r24	; 0x01
	Int0_PFUN=ptr;
 754:	89 81       	ldd	r24, Y+1	; 0x01
 756:	9a 81       	ldd	r25, Y+2	; 0x02
 758:	90 93 69 00 	sts	0x0069, r25
 75c:	80 93 68 00 	sts	0x0068, r24

}
 760:	0f 90       	pop	r0
 762:	0f 90       	pop	r0
 764:	cf 91       	pop	r28
 766:	df 91       	pop	r29
 768:	08 95       	ret

0000076a <EX_INT1VidInit>:
void EX_INT1VidInit(void){
 76a:	df 93       	push	r29
 76c:	cf 93       	push	r28
 76e:	cd b7       	in	r28, 0x3d	; 61
 770:	de b7       	in	r29, 0x3e	; 62

	SET_BIT(SREG ,7);
 772:	af e5       	ldi	r26, 0x5F	; 95
 774:	b0 e0       	ldi	r27, 0x00	; 0
 776:	ef e5       	ldi	r30, 0x5F	; 95
 778:	f0 e0       	ldi	r31, 0x00	; 0
 77a:	80 81       	ld	r24, Z
 77c:	80 68       	ori	r24, 0x80	; 128
 77e:	8c 93       	st	X, r24
	SET_BIT(GICR ,7);
 780:	ab e5       	ldi	r26, 0x5B	; 91
 782:	b0 e0       	ldi	r27, 0x00	; 0
 784:	eb e5       	ldi	r30, 0x5B	; 91
 786:	f0 e0       	ldi	r31, 0x00	; 0
 788:	80 81       	ld	r24, Z
 78a:	80 68       	ori	r24, 0x80	; 128
 78c:	8c 93       	st	X, r24
	CLR_BIT(MCUCR ,2);
 78e:	a5 e5       	ldi	r26, 0x55	; 85
 790:	b0 e0       	ldi	r27, 0x00	; 0
 792:	e5 e5       	ldi	r30, 0x55	; 85
 794:	f0 e0       	ldi	r31, 0x00	; 0
 796:	80 81       	ld	r24, Z
 798:	8b 7f       	andi	r24, 0xFB	; 251
 79a:	8c 93       	st	X, r24
	SET_BIT(MCUCR ,3);
 79c:	a5 e5       	ldi	r26, 0x55	; 85
 79e:	b0 e0       	ldi	r27, 0x00	; 0
 7a0:	e5 e5       	ldi	r30, 0x55	; 85
 7a2:	f0 e0       	ldi	r31, 0x00	; 0
 7a4:	80 81       	ld	r24, Z
 7a6:	88 60       	ori	r24, 0x08	; 8
 7a8:	8c 93       	st	X, r24
}
 7aa:	cf 91       	pop	r28
 7ac:	df 91       	pop	r29
 7ae:	08 95       	ret

000007b0 <EX_INT1VidSetCallBack>:
void EX_INT1VidSetCallBack(void (*ptr)(void)){
 7b0:	df 93       	push	r29
 7b2:	cf 93       	push	r28
 7b4:	00 d0       	rcall	.+0      	; 0x7b6 <EX_INT1VidSetCallBack+0x6>
 7b6:	cd b7       	in	r28, 0x3d	; 61
 7b8:	de b7       	in	r29, 0x3e	; 62
 7ba:	9a 83       	std	Y+2, r25	; 0x02
 7bc:	89 83       	std	Y+1, r24	; 0x01
	Int1_PFUN=ptr;
 7be:	89 81       	ldd	r24, Y+1	; 0x01
 7c0:	9a 81       	ldd	r25, Y+2	; 0x02
 7c2:	90 93 67 00 	sts	0x0067, r25
 7c6:	80 93 66 00 	sts	0x0066, r24

}
 7ca:	0f 90       	pop	r0
 7cc:	0f 90       	pop	r0
 7ce:	cf 91       	pop	r28
 7d0:	df 91       	pop	r29
 7d2:	08 95       	ret

000007d4 <EX_INT2VidInit>:

void EX_INT2VidInit(void){
 7d4:	df 93       	push	r29
 7d6:	cf 93       	push	r28
 7d8:	cd b7       	in	r28, 0x3d	; 61
 7da:	de b7       	in	r29, 0x3e	; 62

	SET_BIT(SREG ,7);
 7dc:	af e5       	ldi	r26, 0x5F	; 95
 7de:	b0 e0       	ldi	r27, 0x00	; 0
 7e0:	ef e5       	ldi	r30, 0x5F	; 95
 7e2:	f0 e0       	ldi	r31, 0x00	; 0
 7e4:	80 81       	ld	r24, Z
 7e6:	80 68       	ori	r24, 0x80	; 128
 7e8:	8c 93       	st	X, r24
	SET_BIT(GICR ,5);
 7ea:	ab e5       	ldi	r26, 0x5B	; 91
 7ec:	b0 e0       	ldi	r27, 0x00	; 0
 7ee:	eb e5       	ldi	r30, 0x5B	; 91
 7f0:	f0 e0       	ldi	r31, 0x00	; 0
 7f2:	80 81       	ld	r24, Z
 7f4:	80 62       	ori	r24, 0x20	; 32
 7f6:	8c 93       	st	X, r24
	CLR_BIT(MCUCSR ,6);
 7f8:	a4 e5       	ldi	r26, 0x54	; 84
 7fa:	b0 e0       	ldi	r27, 0x00	; 0
 7fc:	e4 e5       	ldi	r30, 0x54	; 84
 7fe:	f0 e0       	ldi	r31, 0x00	; 0
 800:	80 81       	ld	r24, Z
 802:	8f 7b       	andi	r24, 0xBF	; 191
 804:	8c 93       	st	X, r24
}
 806:	cf 91       	pop	r28
 808:	df 91       	pop	r29
 80a:	08 95       	ret

0000080c <EX_INT2VidSetCallBack>:
void EX_INT2VidSetCallBack(void (*ptr)(void)){
 80c:	df 93       	push	r29
 80e:	cf 93       	push	r28
 810:	00 d0       	rcall	.+0      	; 0x812 <EX_INT2VidSetCallBack+0x6>
 812:	cd b7       	in	r28, 0x3d	; 61
 814:	de b7       	in	r29, 0x3e	; 62
 816:	9a 83       	std	Y+2, r25	; 0x02
 818:	89 83       	std	Y+1, r24	; 0x01
	Int2_PFUN=ptr;
 81a:	89 81       	ldd	r24, Y+1	; 0x01
 81c:	9a 81       	ldd	r25, Y+2	; 0x02
 81e:	90 93 65 00 	sts	0x0065, r25
 822:	80 93 64 00 	sts	0x0064, r24

}
 826:	0f 90       	pop	r0
 828:	0f 90       	pop	r0
 82a:	cf 91       	pop	r28
 82c:	df 91       	pop	r29
 82e:	08 95       	ret

00000830 <__vector_1>:

ISR(INT0_vect){
 830:	1f 92       	push	r1
 832:	0f 92       	push	r0
 834:	0f b6       	in	r0, 0x3f	; 63
 836:	0f 92       	push	r0
 838:	11 24       	eor	r1, r1
 83a:	2f 93       	push	r18
 83c:	3f 93       	push	r19
 83e:	4f 93       	push	r20
 840:	5f 93       	push	r21
 842:	6f 93       	push	r22
 844:	7f 93       	push	r23
 846:	8f 93       	push	r24
 848:	9f 93       	push	r25
 84a:	af 93       	push	r26
 84c:	bf 93       	push	r27
 84e:	ef 93       	push	r30
 850:	ff 93       	push	r31
 852:	df 93       	push	r29
 854:	cf 93       	push	r28
 856:	cd b7       	in	r28, 0x3d	; 61
 858:	de b7       	in	r29, 0x3e	; 62
	Int0_PFUN();
 85a:	e0 91 68 00 	lds	r30, 0x0068
 85e:	f0 91 69 00 	lds	r31, 0x0069
 862:	09 95       	icall
}
 864:	cf 91       	pop	r28
 866:	df 91       	pop	r29
 868:	ff 91       	pop	r31
 86a:	ef 91       	pop	r30
 86c:	bf 91       	pop	r27
 86e:	af 91       	pop	r26
 870:	9f 91       	pop	r25
 872:	8f 91       	pop	r24
 874:	7f 91       	pop	r23
 876:	6f 91       	pop	r22
 878:	5f 91       	pop	r21
 87a:	4f 91       	pop	r20
 87c:	3f 91       	pop	r19
 87e:	2f 91       	pop	r18
 880:	0f 90       	pop	r0
 882:	0f be       	out	0x3f, r0	; 63
 884:	0f 90       	pop	r0
 886:	1f 90       	pop	r1
 888:	18 95       	reti

0000088a <__vector_2>:

ISR(INT1_vect){
 88a:	1f 92       	push	r1
 88c:	0f 92       	push	r0
 88e:	0f b6       	in	r0, 0x3f	; 63
 890:	0f 92       	push	r0
 892:	11 24       	eor	r1, r1
 894:	2f 93       	push	r18
 896:	3f 93       	push	r19
 898:	4f 93       	push	r20
 89a:	5f 93       	push	r21
 89c:	6f 93       	push	r22
 89e:	7f 93       	push	r23
 8a0:	8f 93       	push	r24
 8a2:	9f 93       	push	r25
 8a4:	af 93       	push	r26
 8a6:	bf 93       	push	r27
 8a8:	ef 93       	push	r30
 8aa:	ff 93       	push	r31
 8ac:	df 93       	push	r29
 8ae:	cf 93       	push	r28
 8b0:	cd b7       	in	r28, 0x3d	; 61
 8b2:	de b7       	in	r29, 0x3e	; 62
	Int1_PFUN();
 8b4:	e0 91 66 00 	lds	r30, 0x0066
 8b8:	f0 91 67 00 	lds	r31, 0x0067
 8bc:	09 95       	icall
}
 8be:	cf 91       	pop	r28
 8c0:	df 91       	pop	r29
 8c2:	ff 91       	pop	r31
 8c4:	ef 91       	pop	r30
 8c6:	bf 91       	pop	r27
 8c8:	af 91       	pop	r26
 8ca:	9f 91       	pop	r25
 8cc:	8f 91       	pop	r24
 8ce:	7f 91       	pop	r23
 8d0:	6f 91       	pop	r22
 8d2:	5f 91       	pop	r21
 8d4:	4f 91       	pop	r20
 8d6:	3f 91       	pop	r19
 8d8:	2f 91       	pop	r18
 8da:	0f 90       	pop	r0
 8dc:	0f be       	out	0x3f, r0	; 63
 8de:	0f 90       	pop	r0
 8e0:	1f 90       	pop	r1
 8e2:	18 95       	reti

000008e4 <__vector_3>:

ISR(INT2_vect){
 8e4:	1f 92       	push	r1
 8e6:	0f 92       	push	r0
 8e8:	0f b6       	in	r0, 0x3f	; 63
 8ea:	0f 92       	push	r0
 8ec:	11 24       	eor	r1, r1
 8ee:	2f 93       	push	r18
 8f0:	3f 93       	push	r19
 8f2:	4f 93       	push	r20
 8f4:	5f 93       	push	r21
 8f6:	6f 93       	push	r22
 8f8:	7f 93       	push	r23
 8fa:	8f 93       	push	r24
 8fc:	9f 93       	push	r25
 8fe:	af 93       	push	r26
 900:	bf 93       	push	r27
 902:	ef 93       	push	r30
 904:	ff 93       	push	r31
 906:	df 93       	push	r29
 908:	cf 93       	push	r28
 90a:	cd b7       	in	r28, 0x3d	; 61
 90c:	de b7       	in	r29, 0x3e	; 62

	Int2_PFUN();
 90e:	e0 91 64 00 	lds	r30, 0x0064
 912:	f0 91 65 00 	lds	r31, 0x0065
 916:	09 95       	icall
}
 918:	cf 91       	pop	r28
 91a:	df 91       	pop	r29
 91c:	ff 91       	pop	r31
 91e:	ef 91       	pop	r30
 920:	bf 91       	pop	r27
 922:	af 91       	pop	r26
 924:	9f 91       	pop	r25
 926:	8f 91       	pop	r24
 928:	7f 91       	pop	r23
 92a:	6f 91       	pop	r22
 92c:	5f 91       	pop	r21
 92e:	4f 91       	pop	r20
 930:	3f 91       	pop	r19
 932:	2f 91       	pop	r18
 934:	0f 90       	pop	r0
 936:	0f be       	out	0x3f, r0	; 63
 938:	0f 90       	pop	r0
 93a:	1f 90       	pop	r1
 93c:	18 95       	reti

0000093e <Timers_VidTimer0Init>:

void (*Timer0_PFun)(void);


void Timers_VidTimer0Init(void)
{
 93e:	df 93       	push	r29
 940:	cf 93       	push	r28
 942:	cd b7       	in	r28, 0x3d	; 61
 944:	de b7       	in	r29, 0x3e	; 62
	//CLR_BIT( TCCR0 , WGM01 );
	/*CTC Mode*/
//	CLR_BIT( TCCR0 , WGM00 );
//	SET_BIT( TCCR0 , WGM01 );
	//fasst PWM mode
	SET_BIT( TCCR0 , WGM00 );
 946:	a3 e5       	ldi	r26, 0x53	; 83
 948:	b0 e0       	ldi	r27, 0x00	; 0
 94a:	e3 e5       	ldi	r30, 0x53	; 83
 94c:	f0 e0       	ldi	r31, 0x00	; 0
 94e:	80 81       	ld	r24, Z
 950:	80 64       	ori	r24, 0x40	; 64
 952:	8c 93       	st	X, r24
	SET_BIT( TCCR0 , WGM01 );
 954:	a3 e5       	ldi	r26, 0x53	; 83
 956:	b0 e0       	ldi	r27, 0x00	; 0
 958:	e3 e5       	ldi	r30, 0x53	; 83
 95a:	f0 e0       	ldi	r31, 0x00	; 0
 95c:	80 81       	ld	r24, Z
 95e:	88 60       	ori	r24, 0x08	; 8
 960:	8c 93       	st	X, r24

	/*setup the mode of OC0 pin*/

	CLR_BIT(TCCR0,COM00);
 962:	a3 e5       	ldi	r26, 0x53	; 83
 964:	b0 e0       	ldi	r27, 0x00	; 0
 966:	e3 e5       	ldi	r30, 0x53	; 83
 968:	f0 e0       	ldi	r31, 0x00	; 0
 96a:	80 81       	ld	r24, Z
 96c:	8f 7e       	andi	r24, 0xEF	; 239
 96e:	8c 93       	st	X, r24
	SET_BIT(TCCR0,COM01);
 970:	a3 e5       	ldi	r26, 0x53	; 83
 972:	b0 e0       	ldi	r27, 0x00	; 0
 974:	e3 e5       	ldi	r30, 0x53	; 83
 976:	f0 e0       	ldi	r31, 0x00	; 0
 978:	80 81       	ld	r24, Z
 97a:	80 62       	ori	r24, 0x20	; 32
 97c:	8c 93       	st	X, r24
	/*Setup the OCR Value*/
	//OCR0 = 99 ;

	/*Select Prescaler factor*/
	/*/8 */
	CLR_BIT( TCCR0 , CS00 );
 97e:	a3 e5       	ldi	r26, 0x53	; 83
 980:	b0 e0       	ldi	r27, 0x00	; 0
 982:	e3 e5       	ldi	r30, 0x53	; 83
 984:	f0 e0       	ldi	r31, 0x00	; 0
 986:	80 81       	ld	r24, Z
 988:	8e 7f       	andi	r24, 0xFE	; 254
 98a:	8c 93       	st	X, r24
	SET_BIT( TCCR0 , CS01 );
 98c:	a3 e5       	ldi	r26, 0x53	; 83
 98e:	b0 e0       	ldi	r27, 0x00	; 0
 990:	e3 e5       	ldi	r30, 0x53	; 83
 992:	f0 e0       	ldi	r31, 0x00	; 0
 994:	80 81       	ld	r24, Z
 996:	82 60       	ori	r24, 0x02	; 2
 998:	8c 93       	st	X, r24
	CLR_BIT( TCCR0 , CS02 );
 99a:	a3 e5       	ldi	r26, 0x53	; 83
 99c:	b0 e0       	ldi	r27, 0x00	; 0
 99e:	e3 e5       	ldi	r30, 0x53	; 83
 9a0:	f0 e0       	ldi	r31, 0x00	; 0
 9a2:	80 81       	ld	r24, Z
 9a4:	8b 7f       	andi	r24, 0xFB	; 251
 9a6:	8c 93       	st	X, r24
}
 9a8:	cf 91       	pop	r28
 9aa:	df 91       	pop	r29
 9ac:	08 95       	ret

000009ae <Timers_VidTimer0SetCallBack>:

void Timers_VidTimer0SetCallBack( void (*Timer0_Ptr)(void) )
{
 9ae:	df 93       	push	r29
 9b0:	cf 93       	push	r28
 9b2:	00 d0       	rcall	.+0      	; 0x9b4 <Timers_VidTimer0SetCallBack+0x6>
 9b4:	cd b7       	in	r28, 0x3d	; 61
 9b6:	de b7       	in	r29, 0x3e	; 62
 9b8:	9a 83       	std	Y+2, r25	; 0x02
 9ba:	89 83       	std	Y+1, r24	; 0x01
	Timer0_PFun = Timer0_Ptr ;
 9bc:	89 81       	ldd	r24, Y+1	; 0x01
 9be:	9a 81       	ldd	r25, Y+2	; 0x02
 9c0:	90 93 6b 00 	sts	0x006B, r25
 9c4:	80 93 6a 00 	sts	0x006A, r24
}
 9c8:	0f 90       	pop	r0
 9ca:	0f 90       	pop	r0
 9cc:	cf 91       	pop	r28
 9ce:	df 91       	pop	r29
 9d0:	08 95       	ret

000009d2 <__vector_11>:




ISR(TIMER0_OVF_vect)
{
 9d2:	1f 92       	push	r1
 9d4:	0f 92       	push	r0
 9d6:	0f b6       	in	r0, 0x3f	; 63
 9d8:	0f 92       	push	r0
 9da:	11 24       	eor	r1, r1
 9dc:	2f 93       	push	r18
 9de:	3f 93       	push	r19
 9e0:	4f 93       	push	r20
 9e2:	5f 93       	push	r21
 9e4:	6f 93       	push	r22
 9e6:	7f 93       	push	r23
 9e8:	8f 93       	push	r24
 9ea:	9f 93       	push	r25
 9ec:	af 93       	push	r26
 9ee:	bf 93       	push	r27
 9f0:	ef 93       	push	r30
 9f2:	ff 93       	push	r31
 9f4:	df 93       	push	r29
 9f6:	cf 93       	push	r28
 9f8:	cd b7       	in	r28, 0x3d	; 61
 9fa:	de b7       	in	r29, 0x3e	; 62
	static u16 Local_U16CounterOVF = 0 ;
	Local_U16CounterOVF++ ;
 9fc:	80 91 60 00 	lds	r24, 0x0060
 a00:	90 91 61 00 	lds	r25, 0x0061
 a04:	01 96       	adiw	r24, 0x01	; 1
 a06:	90 93 61 00 	sts	0x0061, r25
 a0a:	80 93 60 00 	sts	0x0060, r24
	if( Local_U16CounterOVF == 3907 )
 a0e:	80 91 60 00 	lds	r24, 0x0060
 a12:	90 91 61 00 	lds	r25, 0x0061
 a16:	2f e0       	ldi	r18, 0x0F	; 15
 a18:	83 34       	cpi	r24, 0x43	; 67
 a1a:	92 07       	cpc	r25, r18
 a1c:	69 f4       	brne	.+26     	; 0xa38 <__vector_11+0x66>
	{
		Local_U16CounterOVF = 0 ;
 a1e:	10 92 61 00 	sts	0x0061, r1
 a22:	10 92 60 00 	sts	0x0060, r1
		TCNT0 = 192 ;
 a26:	e2 e5       	ldi	r30, 0x52	; 82
 a28:	f0 e0       	ldi	r31, 0x00	; 0
 a2a:	80 ec       	ldi	r24, 0xC0	; 192
 a2c:	80 83       	st	Z, r24

		Timer0_PFun();
 a2e:	e0 91 6a 00 	lds	r30, 0x006A
 a32:	f0 91 6b 00 	lds	r31, 0x006B
 a36:	09 95       	icall
	}

}
 a38:	cf 91       	pop	r28
 a3a:	df 91       	pop	r29
 a3c:	ff 91       	pop	r31
 a3e:	ef 91       	pop	r30
 a40:	bf 91       	pop	r27
 a42:	af 91       	pop	r26
 a44:	9f 91       	pop	r25
 a46:	8f 91       	pop	r24
 a48:	7f 91       	pop	r23
 a4a:	6f 91       	pop	r22
 a4c:	5f 91       	pop	r21
 a4e:	4f 91       	pop	r20
 a50:	3f 91       	pop	r19
 a52:	2f 91       	pop	r18
 a54:	0f 90       	pop	r0
 a56:	0f be       	out	0x3f, r0	; 63
 a58:	0f 90       	pop	r0
 a5a:	1f 90       	pop	r1
 a5c:	18 95       	reti

00000a5e <__vector_10>:



ISR(TIMER0_COMP_vect)
{
 a5e:	1f 92       	push	r1
 a60:	0f 92       	push	r0
 a62:	0f b6       	in	r0, 0x3f	; 63
 a64:	0f 92       	push	r0
 a66:	11 24       	eor	r1, r1
 a68:	2f 93       	push	r18
 a6a:	3f 93       	push	r19
 a6c:	4f 93       	push	r20
 a6e:	5f 93       	push	r21
 a70:	6f 93       	push	r22
 a72:	7f 93       	push	r23
 a74:	8f 93       	push	r24
 a76:	9f 93       	push	r25
 a78:	af 93       	push	r26
 a7a:	bf 93       	push	r27
 a7c:	ef 93       	push	r30
 a7e:	ff 93       	push	r31
 a80:	df 93       	push	r29
 a82:	cf 93       	push	r28
 a84:	cd b7       	in	r28, 0x3d	; 61
 a86:	de b7       	in	r29, 0x3e	; 62
	static u16 Local_U16CounterCTC = 0 ;
	Local_U16CounterCTC++ ;
 a88:	80 91 62 00 	lds	r24, 0x0062
 a8c:	90 91 63 00 	lds	r25, 0x0063
 a90:	01 96       	adiw	r24, 0x01	; 1
 a92:	90 93 63 00 	sts	0x0063, r25
 a96:	80 93 62 00 	sts	0x0062, r24
	if( Local_U16CounterCTC == 10000 )
 a9a:	80 91 62 00 	lds	r24, 0x0062
 a9e:	90 91 63 00 	lds	r25, 0x0063
 aa2:	27 e2       	ldi	r18, 0x27	; 39
 aa4:	80 31       	cpi	r24, 0x10	; 16
 aa6:	92 07       	cpc	r25, r18
 aa8:	49 f4       	brne	.+18     	; 0xabc <__vector_10+0x5e>
	{
		Local_U16CounterCTC = 0 ;
 aaa:	10 92 63 00 	sts	0x0063, r1
 aae:	10 92 62 00 	sts	0x0062, r1
		Timer0_PFun();
 ab2:	e0 91 6a 00 	lds	r30, 0x006A
 ab6:	f0 91 6b 00 	lds	r31, 0x006B
 aba:	09 95       	icall
	}
}
 abc:	cf 91       	pop	r28
 abe:	df 91       	pop	r29
 ac0:	ff 91       	pop	r31
 ac2:	ef 91       	pop	r30
 ac4:	bf 91       	pop	r27
 ac6:	af 91       	pop	r26
 ac8:	9f 91       	pop	r25
 aca:	8f 91       	pop	r24
 acc:	7f 91       	pop	r23
 ace:	6f 91       	pop	r22
 ad0:	5f 91       	pop	r21
 ad2:	4f 91       	pop	r20
 ad4:	3f 91       	pop	r19
 ad6:	2f 91       	pop	r18
 ad8:	0f 90       	pop	r0
 ada:	0f be       	out	0x3f, r0	; 63
 adc:	0f 90       	pop	r0
 ade:	1f 90       	pop	r1
 ae0:	18 95       	reti

00000ae2 <Timer_VidTimer1Init>:



//servo motor

void Timer_VidTimer1Init(void){
 ae2:	df 93       	push	r29
 ae4:	cf 93       	push	r28
 ae6:	cd b7       	in	r28, 0x3d	; 61
 ae8:	de b7       	in	r29, 0x3e	; 62
	// select mode
	//fast PWM -->14
	CLR_BIT(TCCR1A,WGM10);
 aea:	af e4       	ldi	r26, 0x4F	; 79
 aec:	b0 e0       	ldi	r27, 0x00	; 0
 aee:	ef e4       	ldi	r30, 0x4F	; 79
 af0:	f0 e0       	ldi	r31, 0x00	; 0
 af2:	80 81       	ld	r24, Z
 af4:	8e 7f       	andi	r24, 0xFE	; 254
 af6:	8c 93       	st	X, r24
	SET_BIT(TCCR1A,WGM11);
 af8:	af e4       	ldi	r26, 0x4F	; 79
 afa:	b0 e0       	ldi	r27, 0x00	; 0
 afc:	ef e4       	ldi	r30, 0x4F	; 79
 afe:	f0 e0       	ldi	r31, 0x00	; 0
 b00:	80 81       	ld	r24, Z
 b02:	82 60       	ori	r24, 0x02	; 2
 b04:	8c 93       	st	X, r24
	SET_BIT(TCCR1B,WGM12);
 b06:	ae e4       	ldi	r26, 0x4E	; 78
 b08:	b0 e0       	ldi	r27, 0x00	; 0
 b0a:	ee e4       	ldi	r30, 0x4E	; 78
 b0c:	f0 e0       	ldi	r31, 0x00	; 0
 b0e:	80 81       	ld	r24, Z
 b10:	88 60       	ori	r24, 0x08	; 8
 b12:	8c 93       	st	X, r24
	SET_BIT(TCCR1B,WGM13);
 b14:	ae e4       	ldi	r26, 0x4E	; 78
 b16:	b0 e0       	ldi	r27, 0x00	; 0
 b18:	ee e4       	ldi	r30, 0x4E	; 78
 b1a:	f0 e0       	ldi	r31, 0x00	; 0
 b1c:	80 81       	ld	r24, Z
 b1e:	80 61       	ori	r24, 0x10	; 16
 b20:	8c 93       	st	X, r24
	//select OC1A PIN -->Fast PWM
	CLR_BIT(TCCR1A,COM1A0);
 b22:	af e4       	ldi	r26, 0x4F	; 79
 b24:	b0 e0       	ldi	r27, 0x00	; 0
 b26:	ef e4       	ldi	r30, 0x4F	; 79
 b28:	f0 e0       	ldi	r31, 0x00	; 0
 b2a:	80 81       	ld	r24, Z
 b2c:	8f 7b       	andi	r24, 0xBF	; 191
 b2e:	8c 93       	st	X, r24
	SET_BIT(TCCR1A,COM1A1);
 b30:	af e4       	ldi	r26, 0x4F	; 79
 b32:	b0 e0       	ldi	r27, 0x00	; 0
 b34:	ef e4       	ldi	r30, 0x4F	; 79
 b36:	f0 e0       	ldi	r31, 0x00	; 0
 b38:	80 81       	ld	r24, Z
 b3a:	80 68       	ori	r24, 0x80	; 128
 b3c:	8c 93       	st	X, r24
	//setup value of ICR1

	ICR1=19999;
 b3e:	e6 e4       	ldi	r30, 0x46	; 70
 b40:	f0 e0       	ldi	r31, 0x00	; 0
 b42:	8f e1       	ldi	r24, 0x1F	; 31
 b44:	9e e4       	ldi	r25, 0x4E	; 78
 b46:	91 83       	std	Z+1, r25	; 0x01
 b48:	80 83       	st	Z, r24

	//setup OCR1A--> for the angle of serve
	OCR1A=500;
 b4a:	ea e4       	ldi	r30, 0x4A	; 74
 b4c:	f0 e0       	ldi	r31, 0x00	; 0
 b4e:	84 ef       	ldi	r24, 0xF4	; 244
 b50:	91 e0       	ldi	r25, 0x01	; 1
 b52:	91 83       	std	Z+1, r25	; 0x01
 b54:	80 83       	st	Z, r24
	//presalar-->8
	CLR_BIT(TCCR1B,CS10);
 b56:	ae e4       	ldi	r26, 0x4E	; 78
 b58:	b0 e0       	ldi	r27, 0x00	; 0
 b5a:	ee e4       	ldi	r30, 0x4E	; 78
 b5c:	f0 e0       	ldi	r31, 0x00	; 0
 b5e:	80 81       	ld	r24, Z
 b60:	8e 7f       	andi	r24, 0xFE	; 254
 b62:	8c 93       	st	X, r24
	SET_BIT(TCCR1B,CS11);
 b64:	ae e4       	ldi	r26, 0x4E	; 78
 b66:	b0 e0       	ldi	r27, 0x00	; 0
 b68:	ee e4       	ldi	r30, 0x4E	; 78
 b6a:	f0 e0       	ldi	r31, 0x00	; 0
 b6c:	80 81       	ld	r24, Z
 b6e:	82 60       	ori	r24, 0x02	; 2
 b70:	8c 93       	st	X, r24
	CLR_BIT(TCCR1B,CS12);
 b72:	ae e4       	ldi	r26, 0x4E	; 78
 b74:	b0 e0       	ldi	r27, 0x00	; 0
 b76:	ee e4       	ldi	r30, 0x4E	; 78
 b78:	f0 e0       	ldi	r31, 0x00	; 0
 b7a:	80 81       	ld	r24, Z
 b7c:	8b 7f       	andi	r24, 0xFB	; 251
 b7e:	8c 93       	st	X, r24
}
 b80:	cf 91       	pop	r28
 b82:	df 91       	pop	r29
 b84:	08 95       	ret

00000b86 <main>:
#include"avr/io.h"
#include"Timers.h"
#include"DIO.h"
#include"avr/interrupt.h"

void main (void){
 b86:	df 93       	push	r29
 b88:	cf 93       	push	r28
 b8a:	cd b7       	in	r28, 0x3d	; 61
 b8c:	de b7       	in	r29, 0x3e	; 62


	DIO_VidSetPinDirection( DIO_PORTD , DIO_PIN5 , DIO_Output );
 b8e:	83 e0       	ldi	r24, 0x03	; 3
 b90:	65 e0       	ldi	r22, 0x05	; 5
 b92:	41 e0       	ldi	r20, 0x01	; 1
 b94:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_VidSetPinDirection>
	Timer_VidTimer1Init();
 b98:	0e 94 71 05 	call	0xae2	; 0xae2 <Timer_VidTimer1Init>
 b9c:	ff cf       	rjmp	.-2      	; 0xb9c <main+0x16>

00000b9e <_exit>:
 b9e:	f8 94       	cli

00000ba0 <__stop_program>:
 ba0:	ff cf       	rjmp	.-2      	; 0xba0 <__stop_program>
